import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { first } from 'rxjs/operators';
import { EmployeeDetails } from 'src/app/shared/models/common/employee-details.model'
declare const require: any;
@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  Employees: EmployeeDetails[];
  loginForm: FormGroup;
  loading = false;
  submitted = false;
  returnUrl: string;
  employee: EmployeeDetails[];
  error:string;
  constructor(
    private formBuilder: FormBuilder,
    private route: ActivatedRoute,
    private router: Router,

  ) {
    // redirect to home if already logged in
    // if (this.authenticationService.currentUserValue) { 
    //     this.router.navigate(['/']);
    // }
  }

  ngOnInit() {
    this.Employees = require('../../assets/common/Login/Employees.json');
    this.loginForm = this.formBuilder.group({
      username: ['', Validators.required],
      password: ['', Validators.required]
    });
    console.log(this.Employees);
    // get return url from route parameters or default to '/'
    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';
  }

  // convenience getter for easy access to form fields
  get f() { return this.loginForm.controls; }

  onSubmit() {
    this.submitted = true;

    // stop here if form is invalid  
    if (this.loginForm.invalid) {
      return;
    }   
    if ( String(this.f.password.value).toLowerCase() == 'niit@123') {
      this.employee = this.Employees.filter(obj => obj.employeeID == this.f.username.value);
      localStorage.setItem("EmployeeId", this.employee[0].employeeID);
      localStorage.setItem("Role", this.employee[0].role);
      this.router.navigate([this.returnUrl]);
      this.error="";
    }
    else {
this.error="Wrong Username or Password";
      this.router.navigate(['/login']);
    }





  }
}
---------------------------------
<div class="col-md-4 offset-md-4 mt-5">
    
    <div class="card">
        <h4 class="card-header"> Login</h4>
        <div class="card-body">
            <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" formControlName="username" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.username.errors }" />
                    <div *ngIf="submitted && f.username.errors" class="invalid-feedback">
                        <div *ngIf="f.username.errors.required">Username is required</div>
                    </div>
                    
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" formControlName="password" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.password.errors }" />
                    <div *ngIf="submitted && f.password.errors" class="invalid-feedback">
                        <div *ngIf="f.password.errors.required">Password is required</div>
                    </div>
                </div>
                <button  class="btn btn-light">
                    
                    Login
                </button>
                <div *ngIf="error" class="alert alert-danger mt-3 mb-0">{{error}}</div>
            </form>
        </div>
    </div>
</div>

----------------------------------------
import { Component, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { Router, ActivatedRoute } from '@angular/router';
import { VolJrManListService } from 'src/app/shared/services/administration/vol-jr-man-list.service';
import { JrmanListDTO } from 'src/app/shared/models/crewmembererj/vol-jr-man-list';
import { CTDomicileDTO } from 'src/app/shared/models/administration/vol-jr-man-list.model';

@Component({
  selector: 'app-edit',
  templateUrl: './edit.component.html',
  styleUrls: ['./edit.component.css']
})
export class EditComponent implements OnInit {
  subscription: any;

  jrmanListDelete: JrmanListDTO;
  jrmanListUpdate: JrmanListDTO;
  jrmanList: JrmanListDTO = new JrmanListDTO();
  cTDomicileDTO: CTDomicileDTO[] = [];
  volJrManListForm: FormGroup;
  Id: number;
  startDate: string;
  errorFlag1: boolean = false;
  errorFlag: boolean = false;
  endDate: string;
  sdate:Date;
  submitted: boolean = false;
  constructor(private route: ActivatedRoute, private formBuilder: FormBuilder,
    private VolJrManListService: VolJrManListService) { }

  ngOnInit() {
    this.route.queryParams.subscribe(param => {
      this.Id = param['id'];
    });
   
    
    
    this.buildForm();
    this.getpreferredDomicile();
    this.getData(this.Id);


  }

  buildForm() {
    this.volJrManListForm = this.formBuilder.group({
      domicile: [''],
      startDate: [''],
      endDate: ['']
    });
  }
  /**
 * @interface
 * @description
 * get list based on id
 *
 */
  getData(Id: number) {
    debugger
    this.VolJrManListService.getJrManByID(Id).subscribe(result => {
      this.jrmanList = result as JrmanListDTO;
      this.jrmanListUpdate = this.jrmanList;
      this.jrmanListDelete = this.jrmanList;
      this.volJrManListForm.patchValue(this.jrmanList);
      this.volJrManListForm.controls['startDate'].setValue(this.adjustForTimezone(this.jrmanList.startDate));
      this.volJrManListForm.controls['endDate'].setValue(this.adjustForTimezone(this.jrmanList.endDate));
      //this.volJrManListForm.controls['domicile'].setValue(this.jrmanList.domicile);
      //this.volJrManListForm.patchValue(this.jrmanList);

    });
  }
  /**
* @interface
* @description
* time zone adjustment acc to IST
*
*/
  adjustForTimezone(date): Date {
    let formattedDate = new Date(date);
    var timeOffsetInMS: number = formattedDate.getTimezoneOffset() * 60000;
    formattedDate.setTime(formattedDate.getTime() - timeOffsetInMS);
    return formattedDate;
  }
  /**
* @interface
* @description
* get list based for domicile
*
*/
  getpreferredDomicile() {
    this.VolJrManListService.getpreferredDomicile().subscribe(responseList => {
      this.cTDomicileDTO = responseList;
      console.log(this.cTDomicileDTO);
    });
  }

  /**
 * @interface
 * @description
 * delete row value
 *
 */
  deleteValue() {
    let confirmation = confirm('Are you sure you want to delete this row?');
    if (confirmation) {
      this.subscription = this.VolJrManListService.deleteValue(this.jrmanListDelete).subscribe(result => {
        window.opener.location.reload();
        window.close();
      });
    }
  }
  /**
 * @interface
 * @description
 * Update row value
 *
 */
  updateValue() {
    debugger;
    // this.submitted = true;
    if (this.volJrManListForm.valid) {
      this.jrmanListUpdate.startDate = this.volJrManListForm.controls['startDate'].value;
      this.jrmanListUpdate.endDate = this.volJrManListForm.controls['endDate'].value;
      this.jrmanListUpdate.domicile = this.volJrManListForm.controls['domicile'].value;
      this.subscription = this.VolJrManListService.updateValue(this.jrmanListUpdate).subscribe(result => {
        if (result.response != 99 && result.response != 98) {
          this.submitted = true;
          window.close();
          window.opener.location.reload();
        }
        else if (result.response == 99) {
          this.errorFlag1 = true;
        }
        else {
          this.errorFlag = true;
        }
      }
      );
    }
    this.errorFlag = false;
    this.errorFlag1 = false;
    this.sdate=this.volJrManListForm.controls.startDate.value.toLocaleDateString('en-US').replace(/[^ -~]/g, '');
  }
}
